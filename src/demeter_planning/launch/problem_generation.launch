<?xml version="1.0"?>
<launch>

	<!-- arguments -->
	<arg name="domain_path"	default="$(find demeter_planning)/common/domain.pddl" />

	<!-- knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
		<param name="domain_path" value="$(arg domain_path)" />
		<!-- <param name="problem_path" value="$(arg problem_path)" /> -->
		<!-- conditional planning flags -->
		<param name="use_unknowns" value="false" />
	</node>

	<!-- populated problem (fixed predicates) -->
	<node pkg="demeter_planning" type="p_init.py" name="init_populate_problem_file" output="screen"> </node>

	<!-- Add fact using vehicle initial position -->
	<node pkg="demeter_planning" type="p_init_pos.py" name="init_position_problem_file" output="screen"> </node>
	
	<!-- problem generation -->
	<include file="$(find rosplan_planning_system)/launch/includes/problem_interface.launch">
		<arg name="knowledge_base"   value="rosplan_knowledge_base" />
		<arg name="domain_path"      value="$(arg domain_path)" />
		<arg name="problem_path"     value="$(find demeter_planning)/common/problem.pddl" />
		<arg name="problem_topic"    value="problem_instance" />
	</include>
 	
	<!-- planner interface -->
	<include file="$(find rosplan_planning_system)/launch/includes/planner_interface.launch">
		<arg name="use_problem_topic"    value="true" />
		<arg name="problem_topic"        value="/rosplan_problem_interface/problem_instance" />
		<arg name="planner_topic"        value="planner_output" />
		<arg name="domain_path"          value="$(arg domain_path)" />
		<arg name="problem_path"         value="$(find demeter_planning)/common/problem.pddl" />
		<arg name="data_path"            value="$(find demeter_planning)/common/" />
		<arg name="planner_command"      value="timeout 20 $(find rosplan_planning_system)/common/bin/popf DOMAIN PROBLEM -n" />
	</include> 

	<!-- call planning server -->
	<node pkg="demeter_planning" type="planning_server.py" name="call_planning_server" output="screen"> </node>

</launch>